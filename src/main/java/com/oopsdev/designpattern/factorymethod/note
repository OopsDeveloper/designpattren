* 팩토리 메서드 패턴의 핵심 정리
- 여러 객체 중 하나를 선택해서 생성하고 반환하는 패턴
- 클라이언트는 객체 생성 방식을 몰라도 되고, 팩토리 메서드를 통해 필요한 객체를 받을 수 있다.

* 팩토리 메서드 패턴와 퍼사드 패턴 차이
팩토리 : 객체를 생성해서 클라이언트에 반환 / 생성되는 객체	하나의 객체 (다양한 타입 중 하나 선택) / 객체 생성의 책임을 분리
퍼사드 : 여러 객체를 조합해서 복합 작업 수행 / 여러 객체를 동시에 생성하고 사용 / 복잡한 서브시스템을 단순화



예시
1. 다양한 플랫폼(OS) 지원
운영체제(Windows, MacOS, Linux)에 따라 적절한 UI 컴포넌트를 생성해야 할 때.
예: createButton() 메서드가 Windows 버튼 또는 MacOS 버튼을 반환.

2. 결제 수단 처리
결제 시스템에서 신용카드, PayPal, 네이버페이 등 다양한 결제 수단 중 하나를 선택해서 객체를 생성할 때.

3. 로깅 시스템
애플리케이션의 로그를 콘솔, 파일, 데이터베이스 등 다양한 출력 방식으로 남기고 싶을 때.

4.알림 시스템
상황에 따라 이메일, SMS, 푸시 알림 중 적절한 알림 객체를 생성해야 할 때.

5.게임 시스템
적(Enemy) 캐릭터를 상황에 따라 다양하게 생성해야 할 때. 예를 들어 "Easy", "Medium", "Hard"에 따라 다른 적이 등장하도록 구현.
