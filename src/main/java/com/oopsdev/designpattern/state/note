* 상태 패턴
상태가 각각 그에 해당하는 클래스의 객체로 존재하고
현재 상태에 따라 이 기능들의 실행 결과가 달라진다.
하나의 상태에서 다른 상태로 전환할 때마다 대상 상태의 새 객체를 생성자로 만들어 넣어준다.

무언가의 상태를 그 값별로 클래스로 분리해서
이 상태들 각각이 나름대로의 방식으로 메소드들을 구현하고
필요시 스스로를 다른 상태로 전환하도록 하여 코드의 복잡성을 줄이고 유연성을 높인다.